/*
 * oct 18, 2017
 * this program runs the classic tic-tac-toe game 
 */
package Tic.Tac;

import javax.swing.JButton;//This command is needed to use the JButton command
import javax.swing.JOptionPane;//This command is needed to use the JOptionPane

/**
 *
 * @author Asus
 */
public class Toe extends javax.swing.JFrame {

    /**
     * Creates new form Toe
     */
    public Toe() {
        initComponents();
        JButton[][] theButtons = new JButton[3][3];//This command creats the array "theButtons"
        theButtons[0][0] = btn1;//these commands set each button to a slot in the array
        theButtons[0][1] = btn2;
        theButtons[0][2] = btn3;
        theButtons[1][0] = btn4;
        theButtons[1][1] = btn5;
        theButtons[1][2] = btn6;
        theButtons[2][0] = btn7;
        theButtons[2][1] = btn8;
        theButtons[2][2] = btn9;

        for (int i = 0; i < 3; i++) {//These commands set all game buttons in use to false making them not able to be pressed
            for (int j = 0; j < 3; j++) {
                theButtons[i][j].setEnabled(false);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputX = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputO = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(0, 0, 153));
        background.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(204, 0, 0)), "Tic-Tac-Toe", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(204, 0, 0))); // NOI18N

        btn1.setText("----");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("----");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("----");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("----");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("----");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("----");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setText("----");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("----");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("----");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        resetButton.setText("Restart");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        outputX.setText("X Wins: 0");
        jScrollPane1.setViewportView(outputX);

        outputO.setText("O Wins: 0");
        jScrollPane2.setViewportView(outputO);

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                                .addComponent(btn4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn6))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(btn7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn9))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(btn1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn3)))
                        .addGap(25, 25, 25)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                                .addGap(0, 41, Short.MAX_VALUE)
                                .addComponent(resetButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1))))
                .addGap(20, 20, 20))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1)
                    .addComponent(btn2)
                    .addComponent(btn3)
                    .addComponent(resetButton))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn4)
                        .addComponent(btn5)
                        .addComponent(btn6))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn7)
                        .addComponent(btn8)
                        .addComponent(btn9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int[][] buttons = new int[4][4];//This command creates the array that was used to make everything work
    int xWins, oWins, turn = 0, xAndO, tie;//This command declars all the variables used
    boolean stop = false;//This command declars the boolean expresstion that was used as a flag

    public void turnDetermine() {//This method was created to cut down some not needed code and it tracks whos turn it is
        turn++;
        xAndO = turn % 2;
    }

    public void winner() {//this method cuts down on code and is the if structure the determins the out come of the game
        if (buttons[1][1] == 1 && buttons[1][2] == 1 && buttons[1][3] == 1) {
            xWins++;//This command adds one to the xWins counter and this command is used toughout the if structure
            stop = true;//this command turns the flag to true so the users can no longer click any of the buttons and is used thoughout the if structure
            outputX.setText("X Wins: " + xWins);//This displays the score and is used thoughout the if structure
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        }//This comman displays the dialog massage that states the winner and is used thoughout the if structure
        else if (buttons[2][1] == 1 && buttons[2][2] == 1 && buttons[2][3] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[3][1] == 1 && buttons[3][2] == 1 && buttons[3][3] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[1][1] == 1 && buttons[2][1] == 1 && buttons[3][1] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[1][2] == 1 && buttons[2][2] == 1 && buttons[3][2] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[1][3] == 1 && buttons[2][3] == 1 && buttons[3][3] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[1][1] == 1 && buttons[2][2] == 1 && buttons[3][3] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } else if (buttons[1][3] == 1 && buttons[2][2] == 1 && buttons[3][1] == 1) {
            xWins++;
            stop = true;
            outputX.setText("X Wins: " + xWins);
            JOptionPane.showMessageDialog(null, "Player X is the winner");
        } //The seperation point between the possible x outcomes and the possible o outcomes
        else if (buttons[1][1] == 2 && buttons[1][2] == 2 && buttons[1][3] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[2][1] == 2 && buttons[2][2] == 2 && buttons[2][3] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[3][1] == 2 && buttons[3][2] == 2 && buttons[3][3] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[1][1] == 2 && buttons[2][1] == 2 && buttons[3][1] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[1][2] == 2 && buttons[2][2] == 2 && buttons[3][2] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[1][3] == 2 && buttons[2][3] == 2 && buttons[3][3] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[1][1] == 2 && buttons[2][2] == 2 && buttons[3][3] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (buttons[1][3] == 2 && buttons[2][2] == 2 && buttons[3][1] == 2) {
            oWins++;
            stop = true;
            outputO.setText("O Wins: " + oWins);
            JOptionPane.showMessageDialog(null, "Player O is the winner");
        } else if (tie == 8) {//This esle if is acctive when the game is a tie
            JOptionPane.showMessageDialog(null, "Tie game");
        }
    }
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed

        if (stop == false) {//this cammand runs the following when stop is set to false and is used thoughout all the game buttons codes     
            turnDetermine();//this call apon the method that calculats whos turn it is and is used thoughout all the game buttons codes

            if (xAndO != 0) {//This if structure sets ethier a 1 meaning x or 2 meaning o to a slot i the dubble array and then sets the button's name to either -X- or -O- and is used thoughout all the game buttons codes
                buttons[1][1] = 1;
                btn1.setText("-X-");
            } else if (xAndO == 0) {
                buttons[1][1] = 2;
                btn1.setText("-O-");
            }

            btn1.setEnabled(false);//This makes the button unable to be pressed again and is used thoughout all the game buttons codes

            winner();//this calls apon the method thst runs the commands that decid who wins and if nobody wins nothing happons and is used thoughout all the game buttons codes

            tie++;
        }//this adds on to the tie counter which if it gets to 8 then triggers an if statement in the winner method and is used thoughout all the game buttons codes
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[1][2] = 1;
                btn2.setText("-X-");
            } else if (xAndO == 0) {
                buttons[1][2] = 2;
                btn2.setText("-O-");
            }

            btn2.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[1][3] = 1;
                btn3.setText("-X-");
            } else if (xAndO == 0) {
                buttons[1][3] = 2;
                btn3.setText("-O-");
            }

            btn3.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[2][1] = 1;
                btn4.setText("-X-");
            } else if (xAndO == 0) {
                buttons[2][1] = 2;
                btn4.setText("-O-");
            }

            btn4.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[2][2] = 1;
                btn5.setText("-X-");
            } else if (xAndO == 0) {
                buttons[2][2] = 2;
                btn5.setText("-O-");
            }

            btn5.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[2][3] = 1;
                btn6.setText("-X-");
            } else if (xAndO == 0) {
                buttons[2][3] = 2;
                btn6.setText("-O-");
            }

            btn6.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[3][1] = 1;
                btn7.setText("-X-");
            } else if (xAndO == 0) {
                buttons[3][1] = 2;
                btn7.setText("-O-");
            }

            btn7.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[3][2] = 1;
                btn8.setText("-X-");
            } else if (xAndO == 0) {
                buttons[3][2] = 2;
                btn8.setText("-O-");
            }

            btn8.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed

        if (stop == false) {
            turnDetermine();

            if (xAndO != 0) {
                buttons[3][3] = 1;
                btn9.setText("-X-");
            } else if (xAndO == 0) {
                buttons[3][3] = 2;
                btn9.setText("-O-");
            }

            btn9.setEnabled(false);

            winner();

            tie++;
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        btn1.setEnabled(true);//these commands resets all the buttons back to being clickable   
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        btn8.setEnabled(true);
        btn9.setEnabled(true);

        btn1.setText("----");//these commands set all the buttons name back to ----   
        btn2.setText("----");
        btn3.setText("----");
        btn4.setText("----");
        btn5.setText("----");
        btn6.setText("----");
        btn7.setText("----");
        btn8.setText("----");
        btn9.setText("----");

        buttons[1][1] = 0;//these commands set all the slots in the array to zero to reset them
        buttons[1][2] = 0;
        buttons[1][3] = 0;
        buttons[2][1] = 0;
        buttons[2][2] = 0;
        buttons[2][3] = 0;
        buttons[3][1] = 0;
        buttons[3][2] = 0;
        buttons[3][3] = 0;

        stop = false;//this command sets stop to false  

        tie = 0;//this command sets the tie counter back to zero

        turn = 0;//this command sets the turn conter bcak to zero
    }//GEN-LAST:event_resetButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);//this commad closes the program
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Toe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Toe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Toe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Toe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Toe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane outputO;
    private javax.swing.JTextPane outputX;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
}
